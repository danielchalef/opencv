--- a/modules/highgui/src/cap_ffmpeg_impl.hpp
+++ b/modules/highgui/src/cap_ffmpeg_impl.hpp
@@ -1148,7 +1148,6 @@ static const int OPENCV_NO_FRAMES_WRITTEN_CODE = 1000;
 static int icv_av_write_frame_FFMPEG( AVFormatContext * oc, AVStream * video_st, uint8_t * outbuf, uint32_t outbuf_size, AVFrame * picture )
 {
     AVCodecContext * c = video_st->codec;
-    int out_size;
     int ret = 0;
 
     if (oc->oformat->flags & AVFMT_RAWPICTURE) {
@@ -1168,20 +1167,39 @@ static int icv_av_write_frame_FFMPEG( AVFormatContext * oc, AVStream * video_st,
 
         ret = av_write_frame(oc, &pkt);
     } else {
+        AVPacket pkt;
+        int got_output;
+
+        av_init_packet(&pkt);
+#if LIBAVCODEC_VERSION_INT < AV_VERSION_INT(54, 1, 0)
         /* encode the image */
-        out_size = avcodec_encode_video(c, outbuf, outbuf_size, picture);
-        /* if zero size, it means the image was buffered */
-        if (out_size > 0) {
-            AVPacket pkt;
-            av_init_packet(&pkt);
-
-            if(c->coded_frame->pts != (int64_t)AV_NOPTS_VALUE)
-                pkt.pts = av_rescale_q(c->coded_frame->pts, c->time_base, video_st->time_base);
-            if(c->coded_frame->key_frame)
-                pkt.flags |= PKT_FLAG_KEY;
+        int out_size = avcodec_encode_video(c, outbuf, outbuf_size, picture);
+        got_output = out_size > 0;
+        pkt.data   = outbuf;
+        pkt.size   = out_size;
+        if(c->coded_frame->pts != (int64_t)AV_NOPTS_VALUE)
+            pkt.pts = c->coded_frame->pts;
+        pkt.dts = AV_NOPTS_VALUE;
+        if(c->coded_frame->key_frame)
+            pkt.flags |= PKT_FLAG_KEY;
+#else
+        pkt.data = NULL;
+        pkt.size = 0;
+
+        ret = avcodec_encode_video2(c, &pkt, picture, &got_output);
+        if (ret < 0)
+            got_output = 0;
+#endif
+
+        if (got_output) {
+            if (pkt.pts != (int64_t)AV_NOPTS_VALUE)
+                pkt.pts = av_rescale_q(pkt.pts, c->time_base, video_st->time_base);
+            if (pkt.dts != (int64_t)AV_NOPTS_VALUE)
+                pkt.dts = av_rescale_q(pkt.dts, c->time_base, video_st->time_base);
+            if (pkt.duration)
+                pkt.duration = av_rescale_q(pkt.duration, c->time_base, video_st->time_base);
+
             pkt.stream_index= video_st->index;
-            pkt.data= outbuf;
-            pkt.size= out_size;
 
             /* write the compressed frame in the media file */
             ret = av_write_frame(oc, &pkt);
